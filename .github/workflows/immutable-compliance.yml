name: Immutable Compliance System Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'core/immutable_*.py'
      - 'core/runtime_*.py'
      - 'core/mandatory_*.py'
      - 'core/consequence_*.py'
      - 'scripts/activate_immutable_compliance.py'
  pull_request:
    branches: [ main ]

jobs:
  compliance-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libc6-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-immutable.txt
        pip install -r requirements.txt
    
    - name: Create necessary directories
      run: |
        mkdir -p logs
        mkdir -p /tmp/mltrainer
    
    - name: Test Immutable Rules Kernel
      run: |
        python test_immutable_kernel.py
    
    - name: Test Compliance Activation
      run: |
        python scripts/activate_immutable_compliance.py --test-mode
      continue-on-error: true
    
    - name: Run Violation Tests
      run: |
        if [ -f "./test_compliance_violations.py" ]; then
          python test_compliance_violations.py || true
        fi
    
    - name: Verify System Status
      run: |
        if [ -f "./verify_compliance.py" ]; then
          python verify_compliance.py
        fi
    
    - name: Security Scan
      run: |
        pip install bandit
        bandit -r core/immutable_*.py core/runtime_*.py -f json -o security-report.json || true
    
    - name: Upload Security Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report-${{ matrix.python-version }}
        path: security-report.json
    
    - name: Check for Mock Data
      run: |
        # Ensure no mock data patterns exist
        ! grep -r "get_volatility" --include="*.py" . || echo "Found get_volatility patterns"
        ! grep -r "np.random" --include="*.py" . || echo "Found np.random patterns"
        ! grep -r "fake_" --include="*.py" . || echo "Found fake_ patterns"

  docker-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Validation Docker Image
      run: |
        docker build -f Dockerfile.immutable -t mltrainer3/validation:latest .
    
    - name: Test Docker Validation
      run: |
        docker run --rm mltrainer3/validation:latest python -c "from core.immutable_rules_kernel import IMMUTABLE_RULES; print('Docker validation successful')"