# Multi-stage build for unified mlTrainer system
FROM python:3.10-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements_unified.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements_unified.txt

# Production stage
FROM python:3.10-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 mltrainer

# Set working directory
WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/mltrainer/.local

# Copy application code
COPY --chown=mltrainer:mltrainer . .

# Create necessary directories
RUN mkdir -p logs logs/trials logs/memory && \
    chown -R mltrainer:mltrainer logs

# Set environment variables
ENV PATH=/home/mltrainer/.local/bin:$PATH
ENV PYTHONUNBUFFERED=1
ENV STREAMLIT_SERVER_PORT=8501
ENV STREAMLIT_SERVER_ADDRESS=0.0.0.0

# Switch to non-root user
USER mltrainer

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Expose ports
EXPOSE 8501 8000

# Default command (can be overridden)
CMD ["streamlit", "run", "mltrainer_unified_chat.py"]