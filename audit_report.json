{
  "timestamp": "2025-07-13T21:16:48.376787",
  "statistics": {
    "files_scanned": 121,
    "total_lines": 44720,
    "dependencies_checked": 2,
    "rules_checked": 0
  },
  "violations": {
    "syntax_errors": [
      "app.py: unindent does not match any outer indentation level (<unknown>, line 783)",
      "compliance_status_summary.py: unindent does not match any outer indentation level (<unknown>, line 34)",
      "config/immutable_compliance_gateway.py: unindent does not match any outer indentation level (<unknown>, line 73)",
      "core/autonomous_loop.py: EOL while scanning string literal (<unknown>, line 333)",
      "core/crypto_signing.py: invalid syntax (<unknown>, line 117)",
      "core/governance_kernel.py: unindent does not match any outer indentation level (<unknown>, line 68)",
      "core/production_efficiency_manager.py: EOL while scanning string literal (<unknown>, line 162)",
      "custom/adaptive.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/adversarial.py: unindent does not match any outer indentation level (<unknown>, line 25)",
      "custom/alternative_data.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/automl.py: unindent does not match any outer indentation level (<unknown>, line 25)",
      "custom/binomial.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/complexity.py: unindent does not match any outer indentation level (<unknown>, line 28)",
      "custom/detectors.py: unindent does not match any outer indentation level (<unknown>, line 25)",
      "custom/elliott_wave.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/ensemble.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/financial_models.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/fractal.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/indicators.py: unindent does not match any outer indentation level (<unknown>, line 24)",
      "custom/interest_rate.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/macro.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/meta_learning.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/microstructure.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/momentum.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/momentum_models.py: unindent does not match any outer indentation level (<unknown>, line 25)",
      "custom/nonlinear.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/optimization.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/pairs.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/patterns.py: unindent does not match any outer indentation level (<unknown>, line 21)",
      "custom/position_sizing.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/regime_detection.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/regime_ensemble.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/risk.py: unindent does not match any outer indentation level (<unknown>, line 28)",
      "custom/risk_management.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/rl.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/stress.py: unindent does not match any outer indentation level (<unknown>, line 25)",
      "custom/systems.py: unindent does not match any outer indentation level (<unknown>, line 27)",
      "custom/time_series.py: unindent does not match any outer indentation level (<unknown>, line 26)",
      "custom/volatility.py: unindent does not match any outer indentation level (<unknown>, line 28)",
      "custom/volume.py: unindent does not match any outer indentation level (<unknown>, line 21)",
      "demo_single_source_of_truth.py: EOL while scanning string literal (<unknown>, line 22)",
      "drift_protection.py: unindent does not match any outer indentation level (<unknown>, line 113)",
      "example_governed_agent.py: unindent does not match any outer indentation level (<unknown>, line 30)",
      "goal_system.py: EOL while scanning string literal (<unknown>, line 284)",
      "hooks/check_governance_imports.py: EOL while scanning string literal (<unknown>, line 185)",
      "hooks/validate_governance.py: EOL while scanning string literal (<unknown>, line 175)",
      "launch_mltrainer.py: EOL while scanning string literal (<unknown>, line 83)",
      "mlagent_bridge.py: EOL while scanning string literal (<unknown>, line 339)",
      "mltrainer_claude_integration.py: EOL while scanning string literal (<unknown>, line 220)",
      "paper_processor.py: EOL while scanning string literal (<unknown>, line 323)",
      "paper_processor_demo.py: EOL while scanning string literal (<unknown>, line 70)",
      "scripts/final_compliance_check.py: EOF while scanning triple-quoted string literal (<unknown>, line 512)",
      "scripts/production_audit_final.py: unindent does not match any outer indentation level (<unknown>, line 37)",
      "scripts/refactor_models_config.py: EOL while scanning string literal (<unknown>, line 118)",
      "scripts/validate_config.py: EOL while scanning string literal (<unknown>, line 73)",
      "session_compliance_check.py: EOL while scanning string literal (<unknown>, line 24)"
    ],
    "error_handling": [
      "backend/unified_api.py:99 - Empty except block (silently ignores errors)",
      "diagnose_mltrainer_location.py:49 - Empty except block (silently ignores errors)",
      "diagnose_mltrainer_location.py:126 - Empty except block (silently ignores errors)",
      "find_mltrainer_local.py:72 - Empty except block (silently ignores errors)",
      "find_mltrainer_local.py:124 - Empty except block (silently ignores errors)",
      "find_mltrainer_local.py:194 - Empty except block (silently ignores errors)",
      "hooks/check_secrets.py:113 - Empty except block (silently ignores errors)",
      "hooks/check_synthetic_data.py:123 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:633 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:716 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:749 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:852 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:863 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:875 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:890 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:904 - Empty except block (silently ignores errors)",
      "modal_monitoring_dashboard.py:915 - Empty except block (silently ignores errors)",
      "monitoring_dashboard.py:131 - Empty except block (silently ignores errors)",
      "monitoring_dashboard.py:133 - Empty except block (silently ignores errors)",
      "monitoring_dashboard.py:162 - Empty except block (silently ignores errors)",
      "scripts/setup_secure_environment.py:149 - Empty except block (silently ignores errors)"
    ]
  },
  "warnings": {
    "data_sources": [
      "agent_governance.py - Data fetching detected without clear approved source",
      "ai_ml_coaching_interface.py - Data fetching detected without clear approved source",
      "config/__init__.py - Data fetching detected without clear approved source",
      "core/trial_feedback_manager.py - Data fetching detected without clear approved source",
      "mlTrainer_client_wrapper.py - Data fetching detected without clear approved source",
      "walk_forward_trial_launcher.py - Data fetching detected without clear approved source"
    ],
    "governance": [
      "agent_governance.py - Core component not using governance framework",
      "core/async_execution_engine.py - Core component not using governance framework",
      "core/audit_log.py - Core component not using governance framework",
      "core/compliance_mode.py - Core component not using governance framework",
      "core/dynamic_executor.py - Core component not using governance framework",
      "core/enhanced_background_manager.py - Core component not using governance framework",
      "core/enhanced_memory.py - Core component not using governance framework",
      "core/immutable_runtime_enforcer.py - Core component not using governance framework",
      "core/trial_feedback_manager.py - Core component not using governance framework",
      "core/unified_executor.py - Core component not using governance framework",
      "cursor_agent_wrapper.py - Core component not using governance framework",
      "ml_engine_real.py - Core component not using governance framework",
      "mlagent_model_integration.py - Core component not using governance framework",
      "run_cursor_agent.py - Core component not using governance framework"
    ],
    "error_handling": [
      "backend/unified_api.py:99 - Bare except clause (catches all exceptions)",
      "custom/information_theory.py:274 - Bare except clause (catches all exceptions)",
      "diagnose_mltrainer_location.py:126 - Bare except clause (catches all exceptions)",
      "hooks/check_secrets.py:113 - Bare except clause (catches all exceptions)",
      "ml_engine_real.py:509 - Bare except clause (catches all exceptions)",
      "ml_engine_real.py:518 - Bare except clause (catches all exceptions)",
      "mltrainer_models.py:837 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:447 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:591 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:633 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:716 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:803 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:836 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:852 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:863 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:875 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:890 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:904 - Bare except clause (catches all exceptions)",
      "modal_monitoring_dashboard.py:915 - Bare except clause (catches all exceptions)",
      "monitoring_dashboard.py:131 - Bare except clause (catches all exceptions)",
      "monitoring_dashboard.py:133 - Bare except clause (catches all exceptions)",
      "monitoring_dashboard.py:162 - Bare except clause (catches all exceptions)",
      "scripts/setup_secure_environment.py:149 - Bare except clause (catches all exceptions)"
    ],
    "code_quality": [
      "check_missing_models.py:23 - Using print() instead of logging",
      "check_missing_models.py:50 - Using print() instead of logging",
      "check_missing_models.py:51 - Using print() instead of logging",
      "check_missing_models.py:52 - Using print() instead of logging",
      "check_missing_models.py:55 - Using print() instead of logging",
      "check_missing_models.py:57 - Using print() instead of logging",
      "check_missing_models.py:59 - Using print() instead of logging",
      "check_missing_models.py:62 - Using print() instead of logging",
      "comprehensive_compliance_check.py:16 - Using print() instead of logging",
      "comprehensive_compliance_check.py:21 - Using print() instead of logging",
      "comprehensive_compliance_check.py:23 - Using print() instead of logging",
      "comprehensive_compliance_check.py:32 - Using print() instead of logging",
      "comprehensive_compliance_check.py:34 - Using print() instead of logging",
      "comprehensive_compliance_check.py:38 - Using print() instead of logging",
      "comprehensive_compliance_check.py:45 - Using print() instead of logging",
      "comprehensive_compliance_check.py:57 - Using print() instead of logging",
      "comprehensive_compliance_check.py:59 - Using print() instead of logging",
      "comprehensive_compliance_check.py:63 - Using print() instead of logging",
      "comprehensive_compliance_check.py:70 - Using print() instead of logging",
      "comprehensive_compliance_check.py:109 - Using print() instead of logging",
      "comprehensive_compliance_check.py:111 - Using print() instead of logging",
      "comprehensive_compliance_check.py:115 - Using print() instead of logging",
      "comprehensive_compliance_check.py:122 - Using print() instead of logging",
      "comprehensive_compliance_check.py:147 - Using print() instead of logging",
      "comprehensive_compliance_check.py:150 - Using print() instead of logging",
      "comprehensive_compliance_check.py:154 - Using print() instead of logging",
      "comprehensive_compliance_check.py:161 - Using print() instead of logging",
      "comprehensive_compliance_check.py:172 - Using print() instead of logging",
      "comprehensive_compliance_check.py:174 - Using print() instead of logging",
      "comprehensive_compliance_check.py:181 - Using print() instead of logging",
      "comprehensive_compliance_check.py:186 - Using print() instead of logging",
      "comprehensive_compliance_check.py:190 - Using print() instead of logging",
      "comprehensive_compliance_check.py:195 - Using print() instead of logging",
      "comprehensive_compliance_check.py:200 - Using print() instead of logging",
      "comprehensive_compliance_check.py:201 - Using print() instead of logging",
      "comprehensive_compliance_check.py:219 - Using print() instead of logging",
      "comprehensive_compliance_check.py:223 - Using print() instead of logging",
      "comprehensive_compliance_check.py:224 - Using print() instead of logging",
      "comprehensive_compliance_check.py:225 - Using print() instead of logging",
      "comprehensive_compliance_check.py:232 - Using print() instead of logging",
      "comprehensive_compliance_check.py:236 - Using print() instead of logging",
      "comprehensive_compliance_check.py:239 - Using print() instead of logging",
      "comprehensive_compliance_check.py:242 - Using print() instead of logging",
      "config/__init__.py:280 - Using print() instead of logging",
      "core/compliance_mode.py:27 - Unresolved IMPLEMENTED/FIXED comment",
      "core/compliance_mode.py:108 - Unresolved IMPLEMENTED/FIXED comment",
      "core/compliance_mode.py:109 - Unresolved IMPLEMENTED/FIXED comment",
      "core/compliance_mode.py:176 - Unresolved IMPLEMENTED/FIXED comment",
      "diagnose_mltrainer_location.py:13 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:41 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:48 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:53 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:66 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:68 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:91 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:92 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:93 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:98 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:99 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:100 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:103 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:104 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:105 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:106 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:107 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:109 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:112 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:117 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:119 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:125 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:129 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:132 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:133 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:134 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:135 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:136 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:137 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:138 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:139 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:140 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:141 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:142 - Using print() instead of logging",
      "diagnose_mltrainer_location.py:143 - Using print() instead of logging",
      "find_mltrainer_local.py:51 - Using print() instead of logging",
      "find_mltrainer_local.py:52 - Using print() instead of logging",
      "find_mltrainer_local.py:53 - Using print() instead of logging",
      "find_mltrainer_local.py:54 - Using print() instead of logging",
      "find_mltrainer_local.py:160 - Using print() instead of logging",
      "find_mltrainer_local.py:161 - Using print() instead of logging",
      "find_mltrainer_local.py:162 - Using print() instead of logging",
      "find_mltrainer_local.py:165 - Using print() instead of logging",
      "find_mltrainer_local.py:166 - Using print() instead of logging",
      "find_mltrainer_local.py:167 - Using print() instead of logging",
      "find_mltrainer_local.py:168 - Using print() instead of logging",
      "find_mltrainer_local.py:169 - Using print() instead of logging",
      "find_mltrainer_local.py:170 - Using print() instead of logging",
      "find_mltrainer_local.py:171 - Using print() instead of logging",
      "find_mltrainer_local.py:173 - Using print() instead of logging",
      "find_mltrainer_local.py:176 - Using print() instead of logging",
      "find_mltrainer_local.py:185 - Using print() instead of logging",
      "find_mltrainer_local.py:187 - Using print() instead of logging",
      "find_mltrainer_local.py:193 - Using print() instead of logging",
      "find_mltrainer_local.py:197 - Using print() instead of logging",
      "find_mltrainer_local.py:202 - Using print() instead of logging",
      "find_mltrainer_local.py:204 - Using print() instead of logging",
      "find_mltrainer_local.py:206 - Using print() instead of logging",
      "find_mltrainer_local.py:207 - Using print() instead of logging",
      "find_mltrainer_local.py:208 - Using print() instead of logging",
      "find_mltrainer_local.py:211 - Using print() instead of logging",
      "find_mltrainer_local.py:212 - Using print() instead of logging",
      "find_mltrainer_local.py:213 - Using print() instead of logging",
      "find_mltrainer_local.py:214 - Using print() instead of logging",
      "find_mltrainer_local.py:215 - Using print() instead of logging",
      "find_mltrainer_local.py:216 - Using print() instead of logging",
      "find_mltrainer_local.py:217 - Using print() instead of logging",
      "find_mltrainer_local.py:218 - Using print() instead of logging",
      "find_mltrainer_local.py:220 - Using print() instead of logging",
      "find_mltrainer_local.py:221 - Using print() instead of logging",
      "find_mltrainer_local.py:222 - Using print() instead of logging",
      "find_mltrainer_local.py:223 - Using print() instead of logging",
      "find_mltrainer_local.py:228 - Using print() instead of logging",
      "find_mltrainer_local.py:229 - Using print() instead of logging",
      "find_mltrainer_local.py:248 - Using print() instead of logging",
      "implement_all_models.py:16 - Using print() instead of logging",
      "implement_all_models.py:22 - Using print() instead of logging",
      "implement_all_models.py:405 - Using print() instead of logging",
      "implement_all_models.py:409 - Using print() instead of logging",
      "list_missing_models.py:25 - Using print() instead of logging",
      "list_missing_models.py:56 - Using print() instead of logging",
      "list_missing_models.py:57 - Using print() instead of logging",
      "list_missing_models.py:58 - Using print() instead of logging",
      "list_missing_models.py:61 - Using print() instead of logging",
      "list_missing_models.py:63 - Using print() instead of logging",
      "list_missing_models.py:65 - Using print() instead of logging",
      "mltrainer_financial_models.py:31 - Unresolved IMPLEMENTED/FIXED comment",
      "modal_monitoring_dashboard.py:25 - Unresolved IMPLEMENTED/FIXED comment",
      "run_cursor_agent.py:16 - Using print() instead of logging",
      "run_cursor_agent.py:20 - Using print() instead of logging",
      "run_cursor_agent.py:21 - Using print() instead of logging",
      "run_cursor_agent.py:22 - Using print() instead of logging",
      "run_cursor_agent.py:23 - Using print() instead of logging",
      "run_cursor_agent.py:26 - Using print() instead of logging",
      "run_cursor_agent.py:30 - Using print() instead of logging",
      "run_cursor_agent.py:36 - Using print() instead of logging",
      "run_cursor_agent.py:37 - Using print() instead of logging",
      "run_cursor_agent.py:38 - Using print() instead of logging",
      "run_cursor_agent.py:45 - Using print() instead of logging",
      "run_cursor_agent.py:49 - Using print() instead of logging",
      "run_cursor_agent.py:55 - Using print() instead of logging",
      "run_cursor_agent.py:58 - Using print() instead of logging",
      "scripts/production_audit.py:223 - Unresolved IMPLEMENTED/FIXED comment",
      "scripts/production_audit.py:225 - Unresolved IMPLEMENTED/FIXED comment",
      "scripts/production_audit.py:227 - Unresolved IMPLEMENTED/FIXED comment",
      "scripts/production_audit.py:55 - Using print() instead of logging",
      "scripts/production_audit.py:56 - Using print() instead of logging",
      "scripts/production_audit.py:57 - Using print() instead of logging",
      "scripts/production_audit.py:58 - Using print() instead of logging",
      "scripts/production_audit.py:62 - Using print() instead of logging",
      "scripts/production_audit.py:231 - Using print() instead of logging",
      "scripts/production_audit.py:236 - Using print() instead of logging",
      "scripts/production_audit.py:284 - Using print() instead of logging",
      "scripts/production_audit.py:297 - Using print() instead of logging",
      "scripts/production_audit.py:302 - Using print() instead of logging",
      "scripts/production_audit.py:303 - Using print() instead of logging",
      "scripts/production_audit.py:304 - Using print() instead of logging",
      "scripts/production_audit.py:307 - Using print() instead of logging",
      "scripts/production_audit.py:308 - Using print() instead of logging",
      "scripts/production_audit.py:309 - Using print() instead of logging",
      "scripts/production_audit.py:310 - Using print() instead of logging",
      "scripts/production_audit.py:317 - Using print() instead of logging",
      "scripts/production_audit.py:318 - Using print() instead of logging",
      "scripts/production_audit.py:321 - Using print() instead of logging",
      "scripts/production_audit.py:323 - Using print() instead of logging",
      "scripts/production_audit.py:325 - Using print() instead of logging",
      "scripts/production_audit.py:328 - Using print() instead of logging",
      "scripts/production_audit.py:329 - Using print() instead of logging",
      "scripts/production_audit.py:339 - Using print() instead of logging",
      "scripts/production_audit.py:342 - Using print() instead of logging",
      "scripts/production_audit.py:344 - Using print() instead of logging",
      "scripts/production_audit.py:346 - Using print() instead of logging",
      "scripts/production_audit.py:370 - Using print() instead of logging",
      "scripts/production_audit.py:381 - Using print() instead of logging",
      "scripts/production_audit.py:384 - Using print() instead of logging",
      "scripts/production_audit.py:388 - Using print() instead of logging",
      "setup_compliance_check.py:11 - Using print() instead of logging",
      "setup_compliance_check.py:12 - Using print() instead of logging",
      "setup_compliance_check.py:23 - Using print() instead of logging",
      "setup_compliance_check.py:25 - Using print() instead of logging",
      "setup_compliance_check.py:36 - Using print() instead of logging",
      "setup_compliance_check.py:38 - Using print() instead of logging",
      "setup_compliance_check.py:41 - Using print() instead of logging",
      "setup_compliance_check.py:47 - Using print() instead of logging",
      "setup_compliance_check.py:49 - Using print() instead of logging",
      "setup_environment.py:35 - Using print() instead of logging",
      "setup_environment.py:36 - Using print() instead of logging",
      "setup_environment.py:37 - Using print() instead of logging",
      "setup_environment.py:41 - Using print() instead of logging",
      "setup_environment.py:48 - Using print() instead of logging",
      "setup_environment.py:51 - Using print() instead of logging",
      "setup_environment.py:52 - Using print() instead of logging",
      "setup_environment.py:55 - Using print() instead of logging",
      "setup_environment.py:65 - Using print() instead of logging",
      "setup_environment.py:67 - Using print() instead of logging",
      "setup_environment.py:68 - Using print() instead of logging",
      "setup_environment.py:71 - Using print() instead of logging",
      "setup_environment.py:90 - Using print() instead of logging",
      "setup_environment.py:95 - Using print() instead of logging",
      "setup_environment.py:97 - Using print() instead of logging",
      "setup_environment.py:100 - Using print() instead of logging",
      "setup_environment.py:116 - Using print() instead of logging",
      "setup_environment.py:118 - Using print() instead of logging",
      "setup_environment.py:122 - Using print() instead of logging",
      "setup_environment.py:124 - Using print() instead of logging",
      "setup_environment.py:127 - Using print() instead of logging",
      "setup_environment.py:139 - Using print() instead of logging",
      "setup_environment.py:141 - Using print() instead of logging",
      "setup_environment.py:148 - Using print() instead of logging",
      "setup_environment.py:150 - Using print() instead of logging",
      "setup_environment.py:157 - Using print() instead of logging",
      "setup_environment.py:159 - Using print() instead of logging",
      "setup_environment.py:162 - Using print() instead of logging",
      "setup_environment.py:173 - Using print() instead of logging",
      "setup_environment.py:175 - Using print() instead of logging",
      "setup_environment.py:177 - Using print() instead of logging",
      "setup_environment.py:183 - Using print() instead of logging",
      "setup_environment.py:186 - Using print() instead of logging",
      "setup_environment.py:188 - Using print() instead of logging",
      "setup_environment.py:198 - Using print() instead of logging",
      "setup_environment.py:201 - Using print() instead of logging",
      "setup_environment.py:204 - Using print() instead of logging",
      "setup_environment.py:211 - Using print() instead of logging",
      "setup_environment.py:212 - Using print() instead of logging",
      "setup_environment.py:213 - Using print() instead of logging",
      "setup_environment.py:214 - Using print() instead of logging",
      "setup_environment.py:215 - Using print() instead of logging",
      "setup_environment.py:216 - Using print() instead of logging",
      "setup_environment.py:237 - Using print() instead of logging",
      "setup_environment.py:246 - Using print() instead of logging",
      "setup_environment.py:250 - Using print() instead of logging",
      "setup_environment.py:253 - Using print() instead of logging",
      "setup_environment.py:256 - Using print() instead of logging",
      "setup_environment.py:257 - Using print() instead of logging",
      "startup_guardrails.py:98 - Using print() instead of logging",
      "startup_guardrails.py:99 - Using print() instead of logging",
      "startup_guardrails.py:103 - Using print() instead of logging",
      "startup_guardrails.py:105 - Using print() instead of logging",
      "startup_guardrails.py:108 - Using print() instead of logging",
      "startup_guardrails.py:110 - Using print() instead of logging",
      "startup_guardrails.py:113 - Using print() instead of logging",
      "startup_guardrails.py:115 - Using print() instead of logging",
      "startup_guardrails.py:118 - Using print() instead of logging",
      "startup_guardrails.py:120 - Using print() instead of logging",
      "startup_guardrails.py:123 - Using print() instead of logging",
      "startup_guardrails.py:125 - Using print() instead of logging",
      "startup_guardrails.py:127 - Using print() instead of logging",
      "startup_guardrails.py:128 - Using print() instead of logging",
      "startup_guardrails.py:129 - Using print() instead of logging",
      "startup_guardrails.py:130 - Using print() instead of logging",
      "startup_guardrails.py:131 - Using print() instead of logging",
      "startup_guardrails.py:136 - Using print() instead of logging",
      "startup_guardrails.py:137 - Using print() instead of logging",
      "verify_compliance_enforcement.py:18 - Using print() instead of logging",
      "verify_compliance_enforcement.py:19 - Using print() instead of logging",
      "verify_compliance_enforcement.py:32 - Using print() instead of logging",
      "verify_compliance_enforcement.py:34 - Using print() instead of logging",
      "verify_compliance_enforcement.py:35 - Using print() instead of logging",
      "verify_compliance_enforcement.py:40 - Using print() instead of logging",
      "verify_compliance_enforcement.py:41 - Using print() instead of logging",
      "verify_compliance_enforcement.py:54 - Using print() instead of logging",
      "verify_compliance_enforcement.py:55 - Using print() instead of logging",
      "verify_compliance_enforcement.py:57 - Using print() instead of logging",
      "verify_compliance_enforcement.py:58 - Using print() instead of logging",
      "verify_compliance_enforcement.py:63 - Using print() instead of logging",
      "verify_compliance_enforcement.py:64 - Using print() instead of logging",
      "verify_compliance_enforcement.py:75 - Using print() instead of logging",
      "verify_compliance_enforcement.py:77 - Using print() instead of logging",
      "verify_compliance_enforcement.py:88 - Using print() instead of logging",
      "verify_compliance_enforcement.py:90 - Using print() instead of logging",
      "verify_compliance_enforcement.py:94 - Using print() instead of logging",
      "verify_compliance_enforcement.py:95 - Using print() instead of logging",
      "verify_compliance_enforcement.py:104 - Using print() instead of logging",
      "verify_compliance_enforcement.py:105 - Using print() instead of logging",
      "verify_compliance_enforcement.py:106 - Using print() instead of logging",
      "verify_compliance_system.py:17 - Using print() instead of logging",
      "verify_compliance_system.py:18 - Using print() instead of logging",
      "verify_compliance_system.py:32 - Using print() instead of logging",
      "verify_compliance_system.py:34 - Using print() instead of logging",
      "verify_compliance_system.py:37 - Using print() instead of logging",
      "verify_compliance_system.py:40 - Using print() instead of logging",
      "verify_compliance_system.py:43 - Using print() instead of logging",
      "verify_compliance_system.py:44 - Using print() instead of logging",
      "verify_compliance_system.py:54 - Using print() instead of logging",
      "verify_compliance_system.py:56 - Using print() instead of logging",
      "verify_compliance_system.py:59 - Using print() instead of logging",
      "verify_compliance_system.py:62 - Using print() instead of logging",
      "verify_compliance_system.py:63 - Using print() instead of logging",
      "verify_compliance_system.py:65 - Using print() instead of logging",
      "verify_compliance_system.py:68 - Using print() instead of logging",
      "verify_compliance_system.py:72 - Using print() instead of logging",
      "verify_compliance_system.py:73 - Using print() instead of logging",
      "verify_compliance_system.py:74 - Using print() instead of logging",
      "verify_compliance_system.py:76 - Using print() instead of logging",
      "verify_compliance_system.py:79 - Using print() instead of logging",
      "verify_compliance_system.py:83 - Using print() instead of logging",
      "verify_compliance_system.py:84 - Using print() instead of logging",
      "verify_compliance_system.py:85 - Using print() instead of logging",
      "verify_compliance_system.py:87 - Using print() instead of logging",
      "verify_compliance_system.py:88 - Using print() instead of logging",
      "verify_compliance_system.py:89 - Using print() instead of logging",
      "verify_compliance_system.py:91 - Using print() instead of logging",
      "verify_compliance_system.py:92 - Using print() instead of logging",
      "verify_compliance_system.py:95 - Using print() instead of logging",
      "verify_compliance_system.py:98 - Using print() instead of logging",
      "verify_compliance_system.py:104 - Using print() instead of logging",
      "verify_compliance_system.py:105 - Using print() instead of logging",
      "verify_compliance_system.py:122 - Using print() instead of logging",
      "verify_compliance_system.py:130 - Using print() instead of logging",
      "verify_compliance_system.py:131 - Using print() instead of logging",
      "verify_compliance_system.py:139 - Using print() instead of logging",
      "verify_compliance_system.py:140 - Using print() instead of logging",
      "verify_compliance_system.py:141 - Using print() instead of logging",
      "verify_compliance_system.py:142 - Using print() instead of logging",
      "verify_compliance_system.py:143 - Using print() instead of logging",
      "verify_compliance_system.py:144 - Using print() instead of logging"
    ],
    "permissions": [
      "modal_app.py - Potential autonomous execution without permission check",
      "modal_app_optimized.py - Potential autonomous execution without permission check",
      "modal_monitoring_dashboard.py - Potential autonomous execution without permission check"
    ]
  },
  "summary": {
    "critical_violations": 0,
    "total_violations": 77,
    "total_warnings": 370
  }
}